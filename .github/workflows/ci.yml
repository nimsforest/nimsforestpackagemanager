name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Run integration tests
        run: go test -v ./integration

      - name: Build binary
        run: go build -o nimsforestpm ./cmd

      - name: Test CLI help
        run: ./nimsforestpm --help

      - name: Test CLI hello command
        run: ./nimsforestpm hello

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  cross-platform-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          # Windows ARM64 builds often have issues
          - goos: windows
            goarch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build for ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          if [ "${{ matrix.goos }}" = "windows" ]; then
            go build -o nimsforestpm-${{ matrix.goos }}-${{ matrix.goarch }}.exe ./cmd
          else
            go build -o nimsforestpm-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nimsforestpm-${{ matrix.goos }}-${{ matrix.goarch }}
          path: nimsforestpm-${{ matrix.goos }}-${{ matrix.goarch }}*