# NimsforestPM - Package Manager for Organizational Components
# Run these commands from the tools/nimsforestpm directory

.PHONY: help nimsforestpm-hello nimsforestpm-create-organisation nimsforestpm-add-product nimsforestpm-install nimsforestpm-install-component nimsforestpm-install-folders nimsforestpm-addtomainmake nimsforestpm-lint nimsforestpackagemanager-hello nimsforestpackagemanager-create-organisation nimsforestpackagemanager-add-product nimsforestpackagemanager-install nimsforestpackagemanager-install-component nimsforestpackagemanager-install-folders nimsforestpackagemanager-addtomainmake nimsforestpackagemanager-lint

help:
	@echo "=== NimsforestPM - Package Manager for Organizational Components ==="
	@echo ""
	@echo "Core Commands:"
	@echo "  help                              - Show this help message"
	@echo "  nimsforestpm-hello               - System compatibility check"
	@echo "  nimsforestpm-create-organisation - Create new organizational workspace"
	@echo "  nimsforestpm-add-product         - Add product repository to organization"
	@echo "  nimsforestpm-install             - Install NimsForest components"
	@echo "  nimsforestpm-install-component   - Install specific component"
	@echo "  nimsforestpm-addtomainmake       - Add NimsforestPM to main Makefile"
	@echo "  nimsforestpm-lint                - Validate organizational structure"
	@echo ""
	@echo ""
	@echo "Usage Examples:"
	@echo "  make nimsforestpm-create-organisation ORG_NAME=my-company"
	@echo "  make nimsforestpm-add-product PRODUCT_NAME=my-app PRODUCT_TYPE=software"
	@echo "  make nimsforestpm-install COMPONENTS=work,communication,organization,webstack"
	@echo ""
	@echo "Aliases (same commands with longer prefix):"
	@echo "  All commands also available with 'nimsforestpackagemanager-' prefix"
	@echo ""
	@echo "=== Included Tools Help ==="
	@echo ""
	@if command -v make >/dev/null 2>&1; then \
		echo "NimsforestFolders:"; \
		make nimsforestfolders-hello 2>/dev/null || echo "  nimsforestfolders not available"; \
		echo ""; \
	fi
	@echo "For more detailed information, run individual help commands or visit:"
	@echo "https://github.com/nimsforest/nimsforestpackagemanager"

nimsforestpm-hello:
	@echo "=== NimsforestPM System Check ==="
	@echo "Checking system compatibility..."
	@command -v git >/dev/null 2>&1 || { echo "Error: git is required but not installed." >&2; exit 1; }
	@command -v make >/dev/null 2>&1 || { echo "Error: make is required but not installed." >&2; exit 1; }
	@echo "‚úì Git available"
	@echo "‚úì Make available"
	@echo ""
	@echo "NimsForest Organizational Intelligence Cycle:"
	@echo "inbound communication ‚Üí issues ‚Üí work ‚Üí improvements ‚Üí new content ‚Üí outbound communication"
	@echo ""
	@echo "Available components to install:"
	@echo "  ‚Ä¢ nimsforestcommunication - Captures all inbound communication"
	@echo "  ‚Ä¢ nimsforestwork          - Transforms communication into work items"
	@echo "  ‚Ä¢ nimsforestorganization  - Maintains organizational structure"
	@echo "  ‚Ä¢ nimsforestwebstack      - Enables outbound communication"
	@echo "  ‚Ä¢ nimsforestfolders       - Advanced folder management system"
	@echo ""
	@echo "Next: Run 'make nimsforestpm-create-organisation ORG_NAME=my-company' to create your organization"

nimsforestpm-create-organisation:
	@if [ -z "$(ORG_NAME)" ]; then \
		echo "Error: ORG_NAME required. Usage: make nimsforestpm-create-organisation ORG_NAME=my-company"; \
		exit 1; \
	fi
	@echo "=== Creating $(ORG_NAME) Organization Workspace ==="
	@echo "Creating organizational workspace structure..."
	@mkdir -p $(ORG_NAME)-workspace
	@mkdir -p $(ORG_NAME)-workspace/$(ORG_NAME)-organization-workspace/main
	@mkdir -p $(ORG_NAME)-workspace/products-workspace
	@echo "Creating organizational folder structure using nimsforestfolders..."
	@if command -v make >/dev/null 2>&1 && make -n nimsforestfolders-create-folders >/dev/null 2>&1; then \
		MAKEFILE_DIR=$$(dirname "$$(realpath "$(firstword $(MAKEFILE_LIST))")"); \
		TEMPLATE_PATH="$$MAKEFILE_DIR/../docs/templates/nimsforest-organization-structure.json"; \
		if [ ! -f "$$TEMPLATE_PATH" ]; then \
			TEMPLATE_PATH="../docs/templates/nimsforest-organization-structure.json"; \
		fi; \
		make nimsforestfolders-create-folders \
			JSON_FILE="$$TEMPLATE_PATH" \
			BASE_PATH="$(ORG_NAME)-workspace/$(ORG_NAME)-organization-workspace/main"; \
	else \
		echo "‚ö†Ô∏è  nimsforestfolders not available - skipping folder structure creation"; \
		echo "   Install nimsforestfolders or run 'make nimsforestpm-install COMPONENTS=folders' to create proper structure"; \
	fi
	@echo "Initializing git repositories..."
	@cd $(ORG_NAME)-workspace/$(ORG_NAME)-organization-workspace && git init
	@echo "Creating organization README from template..."
	@MAKEFILE_DIR=$$(dirname "$$(realpath "$(firstword $(MAKEFILE_LIST))")"); \
	TEMPLATE_PATH="$$MAKEFILE_DIR/../docs/templates/organization-README.md"; \
	if [ ! -f "$$TEMPLATE_PATH" ]; then \
		TEMPLATE_PATH="../docs/templates/organization-README.md"; \
	fi; \
	sed 's/{{ORG_NAME}}/$(ORG_NAME)/g' "$$TEMPLATE_PATH" > $(ORG_NAME)-workspace/$(ORG_NAME)-organization-workspace/main/README.md
	@echo "Tools are now products - nimsforestpm will be available as global binary"
	@echo "No submodule installation needed for nimsforestpm"
	@echo "Creating organization Makefile..."
	@echo "# $(ORG_NAME) Organization Makefile" > $(ORG_NAME)-workspace/$(ORG_NAME)-organization-workspace/main/Makefile
	@echo "# Include NimsForest Package Manager" >> $(ORG_NAME)-workspace/$(ORG_NAME)-organization-workspace/main/Makefile
	@echo "" >> $(ORG_NAME)-workspace/$(ORG_NAME)-organization-workspace/main/Makefile
	@echo "# nimsforestpm available as global binary" >> $(ORG_NAME)-workspace/$(ORG_NAME)-organization-workspace/main/Makefile
	@cd $(ORG_NAME)-workspace/$(ORG_NAME)-organization-workspace && git add .
	@cd $(ORG_NAME)-workspace/$(ORG_NAME)-organization-workspace && git commit -m "Initial $(ORG_NAME) organization setup"
	@echo "No separate tools repository needed - tools are products"
	@echo "‚úì $(ORG_NAME) organization workspace created successfully!"
	@echo ""
	@echo "Next steps:"
	@echo "  cd $(ORG_NAME)-workspace/$(ORG_NAME)-organization-workspace/main"
	@echo "  make nimsforestpm-install COMPONENTS=work,communication,organization,webstack"

nimsforestpm-add-product:
	@if [ -z "$(PRODUCT_NAME)" ]; then \
		echo "Error: PRODUCT_NAME required. Usage: make nimsforestpm-add-product PRODUCT_NAME=my-product PRODUCT_TYPE=software"; \
		exit 1; \
	fi
	@if [ -z "$(PRODUCT_TYPE)" ]; then \
		echo "Error: PRODUCT_TYPE required. Options: software, hardware, service"; \
		exit 1; \
	fi
	@echo "=== Adding $(PRODUCT_NAME) Product ==="
	@echo "Creating product repository..."
	@WORKSPACE_DIR=$$(pwd | sed 's|/[^/]*-organization-workspace.*||'); \
	mkdir -p $$WORKSPACE_DIR/products-workspace/$(PRODUCT_NAME)-workspace; \
	cd $$WORKSPACE_DIR/products-workspace/$(PRODUCT_NAME)-workspace && git init; \
	MAKEFILE_DIR=$$(dirname "$$(realpath "$(firstword $(MAKEFILE_LIST))")"); \
	TEMPLATE_PATH="$$MAKEFILE_DIR/../docs/templates/nimsforest-product-structure.json"; \
	if [ ! -f "$$TEMPLATE_PATH" ]; then \
		TEMPLATE_PATH="../docs/templates/nimsforest-product-structure.json"; \
	fi; \
	make nimsforestfolders-create-folders \
		JSON_FILE="$$TEMPLATE_PATH" \
		BASE_PATH="$$WORKSPACE_DIR/products-workspace/$(PRODUCT_NAME)-workspace"; \
	echo "# $(PRODUCT_NAME) Product" > README.md; \
	echo "" >> README.md; \
	echo "Product Type: $(PRODUCT_TYPE)" >> README.md; \
	echo "" >> README.md; \
	echo "## Structure" >> README.md; \
	echo "- **actors/**: Entities involved in this product" >> README.md; \
	echo "- **assets/**: Product-specific resources" >> README.md; \
	echo "- **tools/**: Product development tools" >> README.md; \
	echo "- **products/**: Product deliverables" >> README.md; \
	git add .; \
	git commit -m "Initial $(PRODUCT_NAME) product setup"
	@echo "Adding product as submodule to organization..."
	@WORKSPACE_DIR=$$(pwd | sed 's|/[^/]*-organization-workspace.*||'); \
	ORG_REPO=$$(basename $$WORKSPACE_DIR | sed 's/-workspace$$/-organization-workspace/'); \
	cd $$WORKSPACE_DIR/$$ORG_REPO && git submodule add ../products-workspace/$(PRODUCT_NAME)-workspace main/products/$(PRODUCT_NAME)
	@echo "‚úì $(PRODUCT_NAME) product added successfully!"
	@echo ""
	@echo "Product location: ../products-workspace/$(PRODUCT_NAME)-workspace"
	@echo "Linked to organization at: main/products/$(PRODUCT_NAME)"

nimsforestpm-addtomainmake:
	@echo "=== Adding NimsforestPM to Main Makefile ==="
	@if [ ! -f "Makefile" ]; then \
		echo "Creating main Makefile..."; \
		echo "# Main Project Makefile" > Makefile; \
		echo "" >> Makefile; \
	fi
	@MAKEFILE_DIR=$$(dirname "$$(realpath "$(MAKEFILE_LIST)")"); \
	RELATIVE_PATH=$$(realpath --relative-to="." "$$MAKEFILE_DIR/MAKEFILE.nimsforestpm"); \
	if ! grep -q "MAKEFILE.nimsforestpm" Makefile; then \
		echo "Adding nimsforestpm to main Makefile..."; \
		echo "include $$RELATIVE_PATH" >> Makefile; \
		echo "‚úì NimsforestPM commands available in main Makefile"; \
	else \
		echo "‚úì NimsforestPM already integrated in main Makefile"; \
	fi

nimsforestpm-install-component:
	@if [ -z "$(COMPONENT)" ]; then \
		echo "Error: COMPONENT required. Usage: make nimsforestpm-install-component COMPONENT=nimsforestwork"; \
		echo "Available components: nimsforestwork, nimsforestcommunication, nimsforestorganization, nimsforestwebstack, nimsforestfolders"; \
		exit 1; \
	fi
	@echo "=== Installing $(COMPONENT) ==="
	@echo "Adding $(COMPONENT) as product workspace..."
	@WORKSPACE_DIR=$$(pwd); \
	while [ "$$WORKSPACE_DIR" != "/" ]; do \
		if [ -d "$$WORKSPACE_DIR/products-workspace" ]; then \
			echo "üìÅ Found workspace at $$WORKSPACE_DIR"; \
			break; \
		fi; \
		WORKSPACE_DIR=$$(dirname "$$WORKSPACE_DIR"); \
	done; \
	if [ "$$WORKSPACE_DIR" = "/" ]; then \
		echo "‚ùå No NimsForest workspace found"; \
		echo "üí° Are you in a NimsForest workspace? Look for a directory with 'products-workspace/'"; \
		echo "üîç Try running: find . -name 'products-workspace' -type d 2>/dev/null"; \
		exit 1; \
	fi; \
	if [ -d "$$WORKSPACE_DIR/products-workspace/$(COMPONENT)-workspace" ]; then \
		echo "‚úÖ $(COMPONENT) already installed"; \
	else \
		echo "üì¶ Installing $(COMPONENT)..."; \
		cd $$WORKSPACE_DIR/products-workspace && git submodule add https://github.com/nimsforest/$(COMPONENT).git $(COMPONENT)-workspace; \
	fi; \
	ORG_WORKSPACE=$$(find $$WORKSPACE_DIR -name '*-organization-workspace' -type d | head -1); \
	if [ -n "$$ORG_WORKSPACE" ]; then \
		if ! grep -q "MAKEFILE.$(COMPONENT)" $$ORG_WORKSPACE/main/Makefile; then \
			echo "üîó Integrating $(COMPONENT) into organization Makefile"; \
			echo "include ../products-workspace/$(COMPONENT)-workspace/main/MAKEFILE.$(COMPONENT)" >> $$ORG_WORKSPACE/main/Makefile; \
		else \
			echo "‚úÖ $(COMPONENT) already integrated in organization Makefile"; \
		fi; \
	else \
		echo "‚ö†Ô∏è  No organization workspace found - $(COMPONENT) available but not integrated"; \
	fi
	@echo "‚úì $(COMPONENT) installed successfully!"
	@echo "Initialize with: make $(COMPONENT)-init"

nimsforestpm-install:
	@if [ -z "$(COMPONENTS)" ]; then \
		echo "Error: COMPONENTS required. Usage: make nimsforestpm-install COMPONENTS=work,communication"; \
		echo "Available components: work, communication, organization, webstack, folders, all"; \
		exit 1; \
	fi
	@echo "=== Installing NimsForest Components ==="
	@echo "Installing: $(COMPONENTS)"
	@echo ""
	@if echo "$(COMPONENTS)" | grep -q "work\|all"; then \
		make nimsforestpm-install-component COMPONENT=nimsforestwork; \
	fi
	@if echo "$(COMPONENTS)" | grep -q "communication\|all"; then \
		make nimsforestpm-install-component COMPONENT=nimsforestcommunication; \
	fi
	@if echo "$(COMPONENTS)" | grep -q "organization\|all"; then \
		make nimsforestpm-install-component COMPONENT=nimsforestorganization; \
	fi
	@if echo "$(COMPONENTS)" | grep -q "webstack\|all"; then \
		make nimsforestpm-install-component COMPONENT=nimsforestwebstack; \
	fi
	@if echo "$(COMPONENTS)" | grep -q "folders\|all"; then \
		make nimsforestpm-install-component COMPONENT=nimsforestfolders; \
	fi
	@echo ""
	@echo "‚úì All requested components installed successfully!"
	@echo "Initialize components with their respective init commands:"
	@if echo "$(COMPONENTS)" | grep -q "work\|all"; then echo "  make nimsforestwork-init"; fi
	@if echo "$(COMPONENTS)" | grep -q "communication\|all"; then echo "  make nimsforestcommunication-init"; fi
	@if echo "$(COMPONENTS)" | grep -q "organization\|all"; then echo "  make nimsforestorganization-init"; fi
	@if echo "$(COMPONENTS)" | grep -q "webstack\|all"; then echo "  make nimsforestwebstack-init"; fi
	@if echo "$(COMPONENTS)" | grep -q "folders\|all"; then echo "  make nimsforestfolders-init"; fi

nimsforestpm-install-folders:
	@make nimsforestpm-install-component COMPONENT=nimsforestfolders
	@echo "Advanced folder management commands are now available."

nimsforestpm-lint:
	@echo "=== NimsforestPM Organization Validation ==="
	@echo "Checking organizational structure..."
	@echo ""
	@WORKSPACE_DIR=$$(pwd | sed 's|/[^/]*-organization-workspace.*||'); \
	if [ -d "$$WORKSPACE_DIR" ]; then \
		echo "‚úì Workspace structure detected"; \
		echo "Validating folder structure against template..."; \
		MAKEFILE_DIR=$$(dirname "$$(realpath "$(firstword $(MAKEFILE_LIST))")"); \
		make nimsforestfolders-lint JSON_FILE="$$MAKEFILE_DIR/docs/templates/nimsforest-organization-structure.json" BASE_PATH="." || \
		echo "‚ö†Ô∏è  nimsforestfolders-lint not available - cannot validate structure against template"; \
		echo ""; \
		echo "Checking installed components..."; \
		components_found=0; \
		if [ -d "tools/shared/nimsforest-components/nimsforestwork" ]; then \
			echo "‚úì nimsforestwork - Work management and tracking"; \
			components_found=$$((components_found + 1)); \
		else \
			echo "‚úó nimsforestwork - Not installed"; \
		fi; \
		if [ -d "tools/shared/nimsforest-components/nimsforestcommunication" ]; then \
			echo "‚úì nimsforestcommunication - Communication intake system"; \
			components_found=$$((components_found + 1)); \
		else \
			echo "‚úó nimsforestcommunication - Not installed"; \
		fi; \
		if [ -d "tools/shared/nimsforest-components/nimsforestorganization" ]; then \
			echo "‚úì nimsforestorganization - Organizational structure"; \
			components_found=$$((components_found + 1)); \
		else \
			echo "‚úó nimsforestorganization - Not installed"; \
		fi; \
		if [ -d "tools/shared/nimsforest-components/nimsforestwebstack" ]; then \
			echo "‚úì nimsforestwebstack - Web presence and outbound communication"; \
			components_found=$$((components_found + 1)); \
		else \
			echo "‚úó nimsforestwebstack - Not installed"; \
		fi; \
		if [ -d "tools/shared/nimsforest-components/nimsforestfolders" ]; then \
			echo "‚úì nimsforestfolders - Advanced folder management system"; \
			components_found=$$((components_found + 1)); \
		else \
			echo "‚úó nimsforestfolders - Not installed"; \
		fi; \
		echo ""; \
		echo "Components installed: $$components_found/5"; \
		if [ $$components_found -eq 5 ]; then \
			echo "üéâ Complete organizational intelligence cycle with advanced folder management available!"; \
		elif [ $$components_found -eq 4 ]; then \
			echo "üéâ Complete organizational intelligence cycle available! Add folders for advanced management."; \
		elif [ $$components_found -eq 0 ]; then \
			echo "No components installed. Use 'make nimsforestpm-install COMPONENTS=...' to add them."; \
		else \
			echo "Partial installation. Add remaining components to complete the cycle."; \
		fi; \
		echo ""; \
		echo "Checking products..."; \
		if [ -d "$$WORKSPACE_DIR/products-workspace" ]; then \
			product_count=$$(ls -1 $$WORKSPACE_DIR/products-workspace | wc -l); \
			echo "Products found: $$product_count"; \
			if [ $$product_count -gt 0 ]; then \
				ls -1 $$WORKSPACE_DIR/products-workspace | sed 's/^/  - /'; \
			fi; \
		else \
			echo "No product workspaces found"; \
		fi; \
	else \
		echo "‚úó Not in a NimsForest workspace structure"; \
		echo "Run 'make nimsforestpm-create-organisation ORG_NAME=...' to create one"; \
	fi

# Aliases with nimsforestpackagemanager- prefix
nimsforestpackagemanager-hello: nimsforestpm-hello

nimsforestpackagemanager-create-organisation: nimsforestpm-create-organisation

nimsforestpackagemanager-add-product: nimsforestpm-add-product

nimsforestpackagemanager-install: nimsforestpm-install

nimsforestpackagemanager-install-component: nimsforestpm-install-component

nimsforestpackagemanager-install-folders: nimsforestpm-install-folders

nimsforestpackagemanager-addtomainmake: nimsforestpm-addtomainmake

nimsforestpackagemanager-lint: nimsforestpm-lint

